name: Build and Push to DigitalOcean

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Create .env file
        run: |
          echo "API_ID=${{ secrets.API_ID }}" >> .env
          echo "API_HASH=${{ secrets.API_HASH }}" >> .env
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
          echo "OFFICIAL_CHANNEL_IDS=${{ secrets.OFFICIAL_CHANNEL_IDS }}" >> .env

      - name: Build and push
        env:
          REGISTRY: ${{ secrets.DIGITALOCEAN_REGISTRY }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            TAG_SUFFIX="-staging"
          else
            TAG_SUFFIX=""
          fi
          FULL_VERSION=$VERSION$TAG_SUFFIX
          docker build --no-cache --build-arg BOT_VERSION=$FULL_VERSION --secret id=env_file,src=.env -t ${REGISTRY}/telegram-bot:${FULL_VERSION} -t ${REGISTRY}/telegram-bot:latest${TAG_SUFFIX} .
          docker push ${REGISTRY}/telegram-bot:${FULL_VERSION}
          docker push ${REGISTRY}/telegram-bot:latest${TAG_SUFFIX}

      - name: Clean up
        run: rm .env